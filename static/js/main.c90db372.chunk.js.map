{"version":3,"sources":["component/Article.tsx","component/AddArticle.tsx","store/actionCreator.ts","store/actionType.ts","component/livezshow/index.tsx","App.tsx","serviceWorker.ts","store/reducer.ts","index.tsx"],"names":["Article","article","removeArticle","dispatch","useDispatch","deleteArticle","React","className","title","body","onClick","AddArticle","saveArticle","setArticle","handleArticleData","e","currentTarget","id","value","onSubmit","preventDefault","type","placeholder","onChange","disabled","undefined","simulateHttpRequest","action","setTimeout","LiveShow","src","data-index","App","items","document","querySelectorAll","controls","headerItems","descriptionItems","current","slider","init","forEach","control","addEventListener","clickedControl","classList","add","nextSlide","reset","length","transitionDelay","clearInterval","intervalF","target","dataIndex","Number","dataset","index","item","setInterval","remove","seconds","delay","children","childNodes","count","child","parentNode","contains","firstElementChild","style","articles","useSelector","state","shallowEqual","addArticle","map","key","Boolean","window","location","hostname","match","initialState","reducer","newArticle","Math","random","concat","updatedArticles","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iPASaA,EAA2B,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAC5CC,EAA0BC,cAE1BC,EAAgBC,eACpB,SAACL,GAAD,OAAuBE,EAASD,EAAcD,MAC9C,CAACE,EAAUD,IAGb,OACE,uBAAKK,UAAU,WACb,2BACE,0BAAKN,EAAQO,OACb,yBAAIP,EAAQQ,OAEd,0BAAQC,QAAS,kBAAML,EAAcJ,KAArC,Y,sBCjBOU,EAA8B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAChCN,aADgC,mBACvDL,EADuD,KAC9CY,EAD8C,KAGxDC,EAAoB,SAACC,GACzBF,EAAW,2BACNZ,GADK,kBAEPc,EAAEC,cAAcC,GAAKF,EAAEC,cAAcE,UAS1C,OACE,wBAAMC,SANc,SAACJ,GACrBA,EAAEK,iBACFR,EAAYX,IAImBM,UAAU,eACvC,yBACEc,KAAK,OACLJ,GAAG,QACHK,YAAY,QACZC,SAAUT,IAEZ,yBACEO,KAAK,OACLJ,GAAG,OACHK,YAAY,cACZC,SAAUT,IAEZ,0BAAQU,cAAsBC,IAAZxB,GAAlB,iBCxBC,SAASC,EAAcD,GAK5B,OAAOyB,EAJuB,CAC5BL,KCZ0B,iBDa1BpB,YAKG,SAASyB,EAAoBC,GAClC,OAAO,SAACxB,GACNyB,YAAW,WACTzB,EAASwB,KACR,M,UErBME,EAAqB,WAChC,OACE,gCACE,uBAAKtB,UAAU,iBACb,uBAAKA,UAAU,aAEb,uBAAKA,UAAU,mBACb,uBAAKA,UAAU,QACb,uBAAKA,UAAU,wBACb,uBACEA,UAAU,aACVuB,IAAI,6EAIR,uBAAKvB,UAAU,eACb,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,gCAIJ,uBAAKA,UAAU,oBACb,wBAAMA,UAAU,iBACd,oDAON,uBAAKA,UAAU,QACb,uBAAKA,UAAU,wBACb,uBACEA,UAAU,aACVuB,IAAI,iGAIR,uBAAKvB,UAAU,eACb,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,gCAIJ,uBAAKA,UAAU,oBACb,wBAAMA,UAAU,iBACd,sDAON,uBAAKA,UAAU,QACb,uBAAKA,UAAU,wBACb,uBACEA,UAAU,aACVuB,IAAI,2IAIR,uBAAKvB,UAAU,eACb,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,+BAEF,wBAAMA,UAAU,iBACd,gCAIJ,uBAAKA,UAAU,oBACb,wBAAMA,UAAU,iBACd,+EAKR,uBAAKA,UAAU,YACb,0BACE,sBAAIA,UAAU,UAAUwB,aAAW,MACnC,sBAAIxB,UAAU,UAAUwB,aAAW,MACnC,sBAAIxB,UAAU,UAAUwB,aAAW,YCnBlCC,EAlHO,WACpB1B,aAAgB,WACd,IAAM2B,EAAQC,SAASC,iBAAiB,SACtCC,EAAWF,SAASC,iBAAiB,YACrCE,EAAcH,SAASC,iBAAiB,gBACxCG,EAAmBJ,SAASC,iBAAiB,qBAI3CI,EAAU,EAERC,EAAS,CACbC,KAAM,WACJL,EAASM,SAAQ,SAACC,GAAD,OACfA,EAAQC,iBAAiB,SAAS,SAAC7B,GACjCyB,EAAOK,eAAe9B,SAG1BqB,EAASG,GAASO,UAAUC,IAAI,UAChCd,EAAMM,GAASO,UAAUC,IAAI,WAE/BC,UAAW,WAETR,EAAOS,QACHV,IAAYN,EAAMiB,OAAS,IAAGX,GAAW,GAC7CA,IACAH,EAASG,GAASO,UAAUC,IAAI,UAChCd,EAAMM,GAASO,UAAUC,IAAI,UAC7BP,EAAOW,gBAAgBd,GACvBG,EAAOW,gBAAgBb,IAEzBO,eAAgB,SAAC9B,GAEfyB,EAAOS,QACPG,cAAcC,GAEd,IAAMV,EAAU5B,EAAEuC,OAChBC,EAAYC,OAAOb,EAAQc,QAAQC,OAErCf,EAAQG,UAAUC,IAAI,UACtBd,EAAMS,SAAQ,SAACiB,EAAMD,GACfA,IAAUH,GAEZI,EAAKb,UAAUC,IAAI,aAGvBR,EAAUgB,EACVf,EAAOW,gBAAgBd,GACvBG,EAAOW,gBAAgBb,GACvBe,EAAYO,YAAYpB,EAAOQ,UA1CtB,MA4CXC,MAAO,WAELhB,EAAMS,SAAQ,SAACiB,GAAD,OAAUA,EAAKb,UAAUe,OAAO,aAC9CzB,EAASM,SAAQ,SAACC,GAAD,OAAaA,EAAQG,UAAUe,OAAO,cAEzDV,gBAAiB,SAAClB,GAEhB,IAAI6B,EAAU,EAEd7B,EAAMS,SAAQ,SAACiB,GACb,IAEEI,EAFIC,EAAWL,EAAKM,WAClBC,EAAQ,EAIPJ,EADoB,gBAAzBH,EAAKb,UAAU5B,MACA,KACA,KAEf8C,EAAStB,SAAQ,SAACyB,GAEZA,EAAMrB,YAEHiB,EADLJ,EAAKS,WAAWtB,UAAUuB,SAAS,UACtBH,EAAQJ,EAnEf,IAoEOI,EAAQJ,EACrBK,EAAMG,kBAAkBC,MAAMpB,gBAA9B,UAAmDY,EAAnD,KACAG,aAONb,EAAYO,YAAYpB,EAAOQ,UA5EtB,KA6EbR,EAAOC,SACN,IACH,IAAM+B,EAAgCC,aACpC,SAACC,GAAD,OAAyBA,EAAMF,WAC/BG,KAGIxE,EAA0BC,cAE1BQ,EAAcN,eAClB,SAACL,GAAD,OAAuBE,EHtGpB,SAAoBF,GAMzB,OAAOyB,EALuB,CAC5BL,KCJuB,cDKvBpB,YGmGgC2E,CAAW3E,MAC3C,CAACE,IAGH,OACE,4BAEE,gBAAC,EAAD,MACA,gBAAC,EAAD,CAAYS,YAAaA,IACxB4D,EAASK,KAAI,SAAC5E,GAAD,OACZ,gBAAC,EAAD,CACE6E,IAAK7E,EAAQgB,GACbhB,QAASA,EACTC,cAAeA,SCzGL6E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mBChBAC,EAA6B,CACjCZ,SAAU,CACR,CACEvD,GAAI,EACJT,MAAO,SACPC,KACE,0FAEJ,CACEQ,GAAI,EACJT,MAAO,SACPC,KACE,yFA+BO4E,EA3BC,WAGI,IAFlBX,EAEiB,uDAFKU,EACtBzD,EACiB,uCACjB,OAAQA,EAAON,MACb,IJvBuB,cIwBrB,IAAMiE,EAAuB,CAC3BrE,GAAIsE,KAAKC,SACThF,MAAOmB,EAAO1B,QAAQO,MACtBC,KAAMkB,EAAO1B,QAAQQ,MAEvB,OAAO,2BACFiE,GADL,IAEEF,SAAUE,EAAMF,SAASiB,OAAOH,KAEpC,IJhC0B,iBIiCxB,IAAMI,EAA8BhB,EAAMF,SAASmB,QACjD,SAAA1F,GAAO,OAAIA,EAAQgB,KAAOU,EAAO1B,QAAQgB,MAE3C,OAAO,2BACFyD,GADL,IAEEF,SAAUkB,IAGhB,OAAOhB,GCjCHkB,EAEFC,YAAYR,EAASS,YAAgBC,MACzCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,QAGJ1D,SAASiE,eAAe,SFyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c90db372.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ntype Props = {\r\n  article: IArticle;\r\n  removeArticle: (article: IArticle) => void;\r\n};\r\n\r\nexport const Article: React.FC<Props> = ({ article, removeArticle }) => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n\r\n  const deleteArticle = React.useCallback(\r\n    (article: IArticle) => dispatch(removeArticle(article)),\r\n    [dispatch, removeArticle]\r\n  );\r\n\r\n  return (\r\n    <div className=\"Article\">\r\n      <div>\r\n        <h1>{article.title}</h1>\r\n        <p>{article.body}</p>\r\n      </div>\r\n      <button onClick={() => deleteArticle(article)}>Delete</button>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\n\r\ntype Props = {\r\n  saveArticle: (article: IArticle | any) => void;\r\n};\r\n\r\nexport const AddArticle: React.FC<Props> = ({ saveArticle }) => {\r\n  const [article, setArticle] = React.useState<IArticle | {}>();\r\n\r\n  const handleArticleData = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setArticle({\r\n      ...article,\r\n      [e.currentTarget.id]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  const addNewArticle = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    saveArticle(article);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addNewArticle} className=\"Add-article\">\r\n      <input\r\n        type=\"text\"\r\n        id=\"title\"\r\n        placeholder=\"Title\"\r\n        onChange={handleArticleData}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        id=\"body\"\r\n        placeholder=\"Description\"\r\n        onChange={handleArticleData}\r\n      />\r\n      <button disabled={article === undefined ? true : false}>\r\n        Add article\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","import * as actionTypes from \"./actionType\"\r\n\r\nexport function addArticle(article: IArticle) {\r\n  const action: ArticleAction = {\r\n    type: actionTypes.ADD_ARTICLE,\r\n    article,\r\n  }\r\n\r\n  return simulateHttpRequest(action)\r\n}\r\n\r\nexport function removeArticle(article: IArticle) {\r\n  const action: ArticleAction = {\r\n    type: actionTypes.REMOVE_ARTICLE,\r\n    article,\r\n  }\r\n  return simulateHttpRequest(action)\r\n}\r\n\r\nexport function simulateHttpRequest(action: ArticleAction) {\r\n  return (dispatch: DispatchType) => {\r\n    setTimeout(() => {\r\n      dispatch(action)\r\n    }, 500)\r\n  }\r\n}","export const ADD_ARTICLE = \"ADD_ARTICLE\"\r\nexport const REMOVE_ARTICLE = \"REMOVE_ARTICLE\"","import * as React from \"react\";\r\nimport \"./index.css\";\r\nexport const LiveShow: React.FC = () => {\r\n  return (\r\n    <>\r\n      <div className=\"content-width\">\r\n        <div className=\"slideshow\">\r\n          {/* <!-- Slideshow Items --> */}\r\n          <div className=\"slideshow-items\">\r\n            <div className=\"item\">\r\n              <div className=\"item-image-container\">\r\n                <img\r\n                  className=\"item-image\"\r\n                  src=\"https://i.pinimg.com/564x/23/a4/86/23a4860b8b70b1eb27f2791b97aaee8e.jpg\"\r\n                />\r\n              </div>\r\n              {/* <!-- Staggered Header Elements --> */}\r\n              <div className=\"item-header\">\r\n                <span className=\"vertical-part\">\r\n                  <b>H</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>e</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>l</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>l</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>o</b>\r\n                </span>\r\n              </div>\r\n              {/* <!-- Staggered Description Elements --> */}\r\n              <div className=\"item-description\">\r\n                <span className=\"vertical-part\">\r\n                  <b>My name is Tran Nhu.</b>\r\n                </span>\r\n                {/* <span className=\"vertical-part\">\r\n                  <b>ipsum</b>\r\n  </span>*/}\r\n              </div>\r\n            </div>\r\n            <div className=\"item\">\r\n              <div className=\"item-image-container\">\r\n                <img\r\n                  className=\"item-image\"\r\n                  src=\"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/a1232e48702241.589f548dc6bee.jpg\"\r\n                />\r\n              </div>\r\n              {/* <!-- Staggered Header Elements --> */}\r\n              <div className=\"item-header\">\r\n                <span className=\"vertical-part\">\r\n                  <b>D</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>e</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>v</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>e</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>l</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>o</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>p</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>e</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>r</b>\r\n                </span>\r\n              </div>\r\n              {/* <!-- Staggered Description Elements --> */}\r\n              <div className=\"item-description\">\r\n                <span className=\"vertical-part\">\r\n                  <b>I'm a React Developer.</b>\r\n                </span>\r\n                {/* <span className=\"vertical-part\">\r\n                  <b>ipsum</b>\r\n                </span> */}\r\n              </div>\r\n            </div>\r\n            <div className=\"item\">\r\n              <div className=\"item-image-container\">\r\n                <img\r\n                  className=\"item-image\"\r\n                  src=\"https://i2.wp.com/www.futuristarchitecture.com/wp-content/uploads/2016/11/fantastic-small-living-room-interior-idea-7.jpg?w=700&ssl=1\"\r\n                />\r\n              </div>\r\n              {/* <!-- Staggered Header Elements --> */}\r\n              <div className=\"item-header\">\r\n                <span className=\"vertical-part\">\r\n                  <b>E</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>x</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>p</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>e</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>r</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>i</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>e</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>n</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>c</b>\r\n                </span>\r\n                <span className=\"vertical-part\">\r\n                  <b>e</b>\r\n                </span>\r\n              </div>\r\n              {/* <!-- Staggered Description Elements --> */}\r\n              <div className=\"item-description\">\r\n                <span className=\"vertical-part\">\r\n                  <b>6 months of frontend programming with reactjs.</b>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"controls\">\r\n            <ul>\r\n              <li className=\"control\" data-index=\"0\"></li>\r\n              <li className=\"control\" data-index=\"1\"></li>\r\n              <li className=\"control\" data-index=\"2\"></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\n// import \"./styles.css\";\n\nimport { Article } from \"./component/Article\";\nimport { AddArticle } from \"./component/AddArticle\";\nimport { addArticle, removeArticle } from \"./store/actionCreator\";\nimport { Dispatch } from \"redux\";\nimport { LiveShow } from \"./component/livezshow\";\n\nconst App: React.FC = () => {\n  React.useEffect(() => {\n    const items = document.querySelectorAll(\".item\"),\n      controls = document.querySelectorAll(\".control\"),\n      headerItems = document.querySelectorAll(\".item-header\"),\n      descriptionItems = document.querySelectorAll(\".item-description\"),\n      activeDelay = 0.76,\n      interval = 5000;\n\n    let current = 0;\n\n    const slider = {\n      init: () => {\n        controls.forEach((control) =>\n          control.addEventListener(\"click\", (e) => {\n            slider.clickedControl(e);\n          })\n        );\n        controls[current].classList.add(\"active\");\n        items[current].classList.add(\"active\");\n      },\n      nextSlide: () => {\n        // Increment current slide and add active class\n        slider.reset();\n        if (current === items.length - 1) current = -1; // Check if current slide is last in array\n        current++;\n        controls[current].classList.add(\"active\");\n        items[current].classList.add(\"active\");\n        slider.transitionDelay(headerItems);\n        slider.transitionDelay(descriptionItems);\n      },\n      clickedControl: (e: any) => {\n        // Add active class to clicked control and corresponding slide\n        slider.reset();\n        clearInterval(intervalF);\n\n        const control = e.target,\n          dataIndex = Number(control.dataset.index);\n\n        control.classList.add(\"active\");\n        items.forEach((item, index) => {\n          if (index === dataIndex) {\n            // Add active class to corresponding slide\n            item.classList.add(\"active\");\n          }\n        });\n        current = dataIndex; // Update current slide\n        slider.transitionDelay(headerItems);\n        slider.transitionDelay(descriptionItems);\n        intervalF = setInterval(slider.nextSlide, interval); // Fire that bad boi back up\n      },\n      reset: () => {\n        // Remove active classes\n        items.forEach((item) => item.classList.remove(\"active\"));\n        controls.forEach((control) => control.classList.remove(\"active\"));\n      },\n      transitionDelay: (items: any) => {\n        // Set incrementing css transition-delay for .item-header & .item-description, .vertical-part, b elements\n        let seconds = 0;\n\n        items.forEach((item: any) => {\n          const children = item.childNodes; // .vertical-part(s)\n          let count = 1,\n            delay;\n\n          item.classList.value === \"item-header\"\n            ? (seconds = 0.015)\n            : (seconds = 0.007);\n\n          children.forEach((child: any) => {\n            // iterate through .vertical-part(s) and style b element\n            if (child.classList) {\n              item.parentNode.classList.contains(\"active\")\n                ? (delay = count * seconds + activeDelay)\n                : (delay = count * seconds);\n              child.firstElementChild.style.transitionDelay = `${delay}s`; // b element\n              count++;\n            }\n          });\n        });\n      },\n    };\n\n    let intervalF = setInterval(slider.nextSlide, interval);\n    slider.init();\n  }, []);\n  const articles: readonly IArticle[] = useSelector(\n    (state: ArticleState) => state.articles,\n    shallowEqual\n  );\n\n  const dispatch: Dispatch<any> = useDispatch();\n\n  const saveArticle = React.useCallback(\n    (article: IArticle) => dispatch(addArticle(article)),\n    [dispatch]\n  );\n\n  return (\n    <main>\n      {/* <h1>My Articles</h1> */}\n      <LiveShow></LiveShow>\n      <AddArticle saveArticle={saveArticle} />\n      {articles.map((article: IArticle) => (\n        <Article\n          key={article.id}\n          article={article}\n          removeArticle={removeArticle}\n        />\n      ))}\n    </main>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"./actionType\"\r\n\r\nconst initialState: ArticleState = {\r\n  articles: [\r\n    {\r\n      id: 1,\r\n      title: \"post 1\",\r\n      body:\r\n        \"Quisque cursus, metus vitae pharetra Nam libero tempore, cum soluta nobis est eligendi\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"post 2\",\r\n      body:\r\n        \"Harum quidem rerum facilis est et expedita distinctio quas molestias excepturi sint\",\r\n    },\r\n  ],\r\n}\r\nconst reducer = (\r\n  state: ArticleState = initialState,\r\n  action: ArticleAction\r\n): ArticleState => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_ARTICLE:\r\n      const newArticle: IArticle = {\r\n        id: Math.random(), // not really unique\r\n        title: action.article.title,\r\n        body: action.article.body,\r\n      }\r\n      return {\r\n        ...state,\r\n        articles: state.articles.concat(newArticle),\r\n      }\r\n    case actionTypes.REMOVE_ARTICLE:\r\n      const updatedArticles: IArticle[] = state.articles.filter(\r\n        article => article.id !== action.article.id\r\n      )\r\n      return {\r\n        ...state,\r\n        articles: updatedArticles,\r\n      }\r\n  }\r\n  return state\r\n}\r\n\r\nexport default reducer","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, Store } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./store/reducer\";\nconst store: Store<ArticleState, ArticleAction> & {\n  dispatch: DispatchType;\n} = createStore(reducer, applyMiddleware(thunk));\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}